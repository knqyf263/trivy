name: Release Please

on:
  push:
    branches:
      - main
      - 'release/v*'
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: 'Release version (e.g., 0.51.0)'
        type: string

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # To trigger subsequent workflows
          # cf. https://docs.github.com/en/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
          token: ${{ secrets.PAT }}

      - name: Set manual release version
        if: ${{ github.event.inputs.version }}
        id: manual_release
        shell: bash
        run: |
          jq --arg version "${{ github.event.inputs.version }}" '.["release-as"] = $version' release-please-config.json > release-please-config.tmp.json
          mv release-please-config.tmp.json release-please-config.json
 
      - name: Release Please
        if: startsWith(github.event.head_commit.message, 'release:') != true
        id: release
        uses: googleapis/release-please-action@v4
        with:
          # To trigger subsequent workflows
          # cf. https://docs.github.com/en/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
          token: ${{ secrets.PAT }}
          target-branch: ${{ github.ref_name }}

      # Since skip-github-release is specified, the outputs of googleapis/release-please-action cannot be used.
      # Therefore, we need to parse the version manually.
      - name: Extract version and PR number from commit message
        if: startsWith(github.event.head_commit.message, 'release:')
        id: extract_info
        shell: bash
        run: |
          echo "version=$( echo "${{ github.event.head_commit.message }}" | sed -n 's/^release: v\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/p' )" >> $GITHUB_OUTPUT
          echo "pr_number=$( echo "${{ github.event.head_commit.message }}" | sed 's/.*(\#\([0-9]\+\)).*$/\1/' )" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - name: Tag release
        if: steps.extract_info.outputs.version
        shell: bash
        run: |
          git tag v${{ steps.extract_info.outputs.version }}
          git push origin v${{ steps.extract_info.outputs.version }}

      # Since skip-github-release is specified, googleapis/release-please-action doesn't delete the label.
      - name: Remove the label from PR
        if: steps.extract_info.outputs.pr_number
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = parseInt('${{ steps.extract_info.outputs.pr_number }}', 10);
            github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              name: 'autorelease: pending'
            });
